#
# Copyright (C) Troy D. Straszheim
#
# Distributed under the Boost Software License, Version 1.0.
# See accompanying file LICENSE_1_0.txt or copy at
#   http://www.boost.org/LICENSE_1_0.txt
#

#
# This file is generated by cmake and installed to 
# BOOST_VERSIONED_CMAKE_FILES_DIR/Boost-@BOOST_VERSION@.
# 
# when a users does a find_package(Boost ...) BoostConfigVersion.cmake
# and BoostVersion.cmake will search for this file.
#

#
#  Various variables
#
set(Boost_INCLUDE_DIRS "@CMAKE_INSTALL_PREFIX@/@BOOST_INCLUDE_INSTALL_DIR@")
set(Boost_INCLUDE_DIR "@CMAKE_INSTALL_PREFIX@/@BOOST_INCLUDE_INSTALL_DIR@"
  CACHE FILEPATH "Boost include directory")
set(Boost_LIBRARY_DIRS "@CMAKE_INSTALL_PREFIX@/@BOOST_LIB_INSTALL_DIR@")
#
#  Include the imported targets
#
include("@CMAKE_INSTALL_PREFIX@/@BOOST_LIB_INSTALL_DIR@/cmake/Boost.cmake")

#
#  Calculate target suffix from user variables
#
if (Boost_USE_MULTITHREADED)
  set(mtflag "-mt")
else()
  set(mtflag "")
endif()

if (Boost_USE_STATIC)
  set(staticflag "-static")
else()
  set(staticflag "-shared")
endif()

if (${CMAKE_BUILD_TYPE} MATCHES "^Rel")
  set(releaseflag "")
else()
  set(releaseflag "-debug")
endif()

set(Boost_LIBRARIES "")
foreach(component ${Boost_FIND_COMPONENTS})
  message("component=${component}")
  #
  # Check that it is really a target
  # 
  set(target boost_${component}${mtflag}${staticflag}${releaseflag})
  get_target_property(p ${target} TYPE)
  message("TYPE ${target} == ${p}")
  if (NOT (p MATCHES "_LIBRARY$"))
    message(SEND_ERROR "component ${target} is not a library target.")
  endif()

  list(APPEND Boost_LIBRARIES ${target})
endforeach()

